package  {		import com.adobe.serialization.json.JSON;		import flash.display.MovieClip;	import flash.net.SharedObject;	import flash.net.navigateToURL;	import flash.net.URLRequest;	import flash.net.URLRequestMethod;	import flash.net.URLVariables;	import flash.net.URLLoader;	import flash.net.URLLoaderDataFormat;	import flash.events.Event;	import flash.events.IOErrorEvent;		public class HighScoresScreen extends MovieClip {				public var so : SharedObject;		public var localPlayers : Array = ["CCP", "SLP", "JRM", "BDN", "KIT"];		public var localScores : Array = [500, 400, 300, 200, 100];				protected var url : String;		protected var base_url : String = "http://squabbler.net/flashmines/score.php";		protected var loader : URLLoader;		protected var sender : URLLoader;		protected var req : URLRequest;		protected var sendreq : URLRequest;		protected var vars : URLVariables;				public function HighScoresScreen() {			so = SharedObject.getLocal("flashmines");			//so.clear();			score0.text = "500";			score1.text = "400";			score2.text = "300";			score3.text = "200";			score4.text = "100";		}				public function getLocalScores() : void {						scoresCategoryTF.text = "COMPUTER";						var i : int;			for (i = 0; i < 5; i++) {				if (so.data.scores) {					if (so.data.scores[i]) {						localScores[i] = so.data.scores[i];						localPlayers[i] = so.data.players[i];					}				}								this["score"+i].text = localScores[i];				this["player"+i].text = localPlayers[i];			}		}				public function saveLocalScores() : void {			so.data.scores = localScores;			so.data.players = localPlayers;			so.flush();		}				public function getWorldScores() : void {						scoresCategoryTF.text = "WORLD";						loader = new URLLoader();			loader.addEventListener( Event.COMPLETE, _onGetWorldScoresComplete );			loader.addEventListener( IOErrorEvent.IO_ERROR, _onGetWorldScoresError );			url = base_url + "?f=get";			req = new URLRequest(url);			req.method = URLRequestMethod.GET;			loader.load(req);		}				protected function _onGetWorldScoresComplete( $e : Event ) : void {			if ($e.target.data) {								var obj : Object = JSON.decode($e.target.data);								var i : int;				for (i = 1; i < 6; i++) {					this["score"+(i-1)].text = obj[i]["score"];					this["player"+(i-1)].text = obj[i]["player"];				}							} else {				trace("Data returned null!!");			}		}				protected function _onGetWorldScoresError( $e : IOErrorEvent ) : void {			trace( IOErrorEvent($e).text );		}				public function submit( $score : uint, $player : String ) : void {						// Determine Local Score Rank & Modify Local Scores			if ($score > localScores[0]) {				//Rank 1;				localScores[4] = localScores[3];				localPlayers[4] = localPlayers[3];				localScores[3] = localScores[2];				localPlayers[3] = localPlayers[2];				localScores[2] = localScores[1];				localPlayers[2] = localPlayers[1];				localScores[1] = localScores[0];				localPlayers[1] = localPlayers[0];				localScores[0] = $score;				localPlayers[0] = $player;			} else if ($score > localScores[1]) {				//Rank 2:				localScores[4] = localScores[3];				localPlayers[4] = localPlayers[3];				localScores[3] = localScores[2];				localPlayers[3] = localPlayers[2];				localScores[2] = localScores[1];				localPlayers[2] = localPlayers[1];				localScores[1] = $score;				localPlayers[1] = $player;			} else if ($score > localScores[2]) {				//Rank 3:				localScores[4] = localScores[3];				localPlayers[4] = localPlayers[3];				localScores[3] = localScores[2];				localPlayers[3] = localPlayers[2];				localScores[2] = $score;				localPlayers[2] = $player;			} else if ($score > localScores[3]) {				//Rank 4:				localScores[4] = localScores[3];				localPlayers[4] = localPlayers[3];				localScores[3] = $score;				localPlayers[3] = $player;			} else if ($score > localScores[4]) {				//Rank 5:				localScores[4] = $score;				localPlayers[4] = $player;			}						// Save Local Scores			saveLocalScores();						// Submit World Score			sender = new URLLoader();			sender.addEventListener( Event.COMPLETE, _onGetWorldScoresComplete );			sender.addEventListener( IOErrorEvent.IO_ERROR, _onGetWorldScoresError );			url = base_url + "?f=save&s="+$score+"&p="+$player;			sendreq = new URLRequest(url);			sendreq.method = URLRequestMethod.POST;			sender.load(sendreq);		}	}	}